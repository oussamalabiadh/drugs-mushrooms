# -*- coding: utf-8 -*-
"""mushrooms.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O7wqVup9-jMjy6KuJsE0liX6O7TI07jV
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

df=pd.read_csv('mushrooms.csv')

df.head()

df.info()

# check duplication
df.duplicated().sum()

y=df['class']
x=df.drop('class', axis=1)

y.head()

x.head()

label_encoder = LabelEncoder()
y= label_encoder.fit_transform(y)

y

for col in x.columns:
    x[col] = label_encoder.fit_transform(x[col])

x.head()

x_train , x_test , y_train , y_test = train_test_split(x,y,test_size=0.25 , random_state =42,shuffle=True)

print("x_train size = " , x_train.shape)
print("y_train size = " , y_train.shape)
print("x_test size = " , x_test.shape)
print("y_test size = " , y_test.shape)

model = LogisticRegression()
model.fit(x_train,y_train)

y_pred = model.predict(x_test)

y_pred

cm = confusion_matrix(y_test,y_pred)
cm

sns.heatmap(cm,annot=True)

y_test =pd.DataFrame(y_test)
y_test.value_counts()

print( classification_report(y_test,y_pred))

